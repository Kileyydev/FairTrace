import uuid
from django.db import models
from django.conf import settings

class Farmer(models.Model):
    STATUS_CHOICES = [
        ('pending', 'Pending'),
        ('confirmed', 'Confirmed'),
        ('failed', 'Failed'),
    ]
    user = models.OneToOneField(
        settings.AUTH_USER_MODEL,
        on_delete=models.CASCADE,
        related_name='farmer_profile',
        null=True, blank=True
    )

    uid = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)
    full_name = models.CharField(max_length=200)
    national_id = models.CharField(max_length=100)
    phone = models.CharField(max_length=50)
    email = models.EmailField()
    farm_address = models.TextField()
    gps_lat = models.DecimalField(max_digits=11, decimal_places=7, null=True, blank=True)
    gps_long = models.DecimalField(max_digits=11, decimal_places=7, null=True, blank=True)
    farm_size = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    main_crops = models.TextField(blank=True)

    # Autogenerated SACCO membership number
    sacco_membership = models.CharField(max_length=20, unique=True, blank=True)

    created_at = models.DateTimeField(auto_now_add=True)

    # On-chain fields
    onchain_status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='pending')
    onchain_tx = models.CharField(max_length=200, blank=True)
    contract_address = models.CharField(max_length=100, blank=True)

    def save(self, *args, **kwargs):
        if not self.sacco_membership:
            # Example: auto-generate SACCO membership number, e.g., FT-123456
            import random
            self.sacco_membership = f"FT-{random.randint(100000, 999999)}"
        super().save(*args, **kwargs)

    def __str__(self):
        return f"{self.full_name} - {self.uid}"
