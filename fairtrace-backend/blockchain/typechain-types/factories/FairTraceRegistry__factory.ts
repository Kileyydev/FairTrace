/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FairTraceRegistry,
  FairTraceRegistryInterface,
} from "../FairTraceRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "farmerId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "FarmerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "farmerId",
        type: "bytes32",
      },
    ],
    name: "getRecord",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "bytes32",
        name: "farmerId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "farmerId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "registerFarmer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102c78061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301e6472514610046578063213681cd146100b157806376a2a0e314610110575b600080fd5b610084610054366004610256565b6000602081905290815260409020805460018201546002830154600390930154919290916001600160a01b031684565b604080519485526020850193909352918301526001600160a01b0316606082015260800160405180910390f35b6100846100bf366004610256565b6000908152602081815260409182902082516080810184528154808252600183015493820184905260028301549482018590526003909201546001600160a01b031660609091018190529093919291565b61012361011e36600461026f565b610125565b005b816101645760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b60448201526064015b60405180910390fd5b600082815260208190526040902060020154156101b85760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b604482015260640161015b565b60408051608081018252838152602080820184815242838501818152336060860181815260008a81528087528890209651875593516001870155905160028601559151600390940180546001600160a01b0319166001600160a01b03909516949094179093559251918252839185917f7f276d1474aa4e627859862e81e12e6f14298e173e792e46b5d8ed0d8f3c6251910160405180910390a45050565b60006020828403121561026857600080fd5b5035919050565b6000806040838503121561028257600080fd5b5050803592602090910135915056fea2646970667358221220f687616c7d399b8741cc241b6fa8ab8dec554a99f378b940194d0dffd3246c3a64736f6c634300081c0033";

type FairTraceRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairTraceRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FairTraceRegistry__factory extends ContractFactory {
  constructor(...args: FairTraceRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FairTraceRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FairTraceRegistry__factory {
    return super.connect(runner) as FairTraceRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairTraceRegistryInterface {
    return new Interface(_abi) as FairTraceRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FairTraceRegistry {
    return new Contract(address, _abi, runner) as unknown as FairTraceRegistry;
  }
}
