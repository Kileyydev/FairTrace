/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FarmerRegistry,
  FarmerRegistryInterface,
} from "../../FairTraceRegistry.sol/FarmerRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "farmerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fullName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "farmLocation",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "FarmerRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farmers",
    outputs: [
      {
        internalType: "uint256",
        name: "farmerId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "fullName",
        type: "string",
      },
      {
        internalType: "string",
        name: "nationalIdHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "farmLocation",
        type: "string",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_farmerId",
        type: "uint256",
      },
    ],
    name: "getFarmer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "farmerId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fullName",
            type: "string",
          },
          {
            internalType: "string",
            name: "nationalIdHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "farmLocation",
            type: "string",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct FarmerRegistry.Farmer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_fullName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nationalIdHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_farmLocation",
        type: "string",
      },
    ],
    name: "registerFarmer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600055348015601457600080fd5b506109f2806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806329a566d2146100465780638afdd6691461006c578063ad0caa7614610090575b600080fd5b61005961005436600461064f565b6100b0565b6040519081526020015b60405180910390f35b61007f61007a3660046106e3565b6101ae565b604051610063959493929190610742565b6100a361009e3660046106e3565b61037d565b604051610063919061079c565b600080546040805160a081018252828152602080820188815282840188905260608301879052336080840152848652600191829052928520825181559251919291908201906100ff90826108a8565b506040820151600282019061011490826108a8565b506060820151600382019061012990826108a8565b5060809190910151600490910180546001600160a01b0319166001600160a01b03909216919091179055604051339082907f9822159e3dc24e507907a66b4172fc2e18eeb689bfd71c3877b119d7b5f4e2b3906101899089908890610967565b60405180910390a36000805490806101a083610995565b909155509095945050505050565b6001602081905260009182526040909120805491810180546101cf9061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb9061081f565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b50505050509080600201805461025d9061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546102899061081f565b80156102d65780601f106102ab576101008083540402835291602001916102d6565b820191906000526020600020905b8154815290600101906020018083116102b957829003601f168201915b5050505050908060030180546102eb9061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061081f565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b505050600490930154919250506001600160a01b031685565b6103b86040518060a001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b031681525090565b600082815260016020818152604092839020835160a08101909452805484529182018054918401916103e99061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546104159061081f565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b5050505050815260200160028201805461047b9061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546104a79061081f565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b5050505050815260200160038201805461050d9061081f565b80601f01602080910402602001604051908101604052809291908181526020018280546105399061081f565b80156105865780601f1061055b57610100808354040283529160200191610586565b820191906000526020600020905b81548152906001019060200180831161056957829003601f168201915b5050509183525050600491909101546001600160a01b031660209091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105d157600080fd5b813567ffffffffffffffff8111156105eb576105eb6105aa565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561061a5761061a6105aa565b60405281815283820160200185101561063257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561066457600080fd5b833567ffffffffffffffff81111561067b57600080fd5b610687868287016105c0565b935050602084013567ffffffffffffffff8111156106a457600080fd5b6106b0868287016105c0565b925050604084013567ffffffffffffffff8111156106cd57600080fd5b6106d9868287016105c0565b9150509250925092565b6000602082840312156106f557600080fd5b5035919050565b6000815180845260005b8181101561072257602081850181015186830182015201610706565b506000602082860101526020601f19601f83011685010191505092915050565b85815260a06020820152600061075b60a08301876106fc565b828103604084015261076d81876106fc565b9050828103606084015261078181866106fc565b91505060018060a01b03831660808301529695505050505050565b60208152815160208201526000602083015160a060408401526107c260c08401826106fc565b90506040840151601f198483030160608501526107df82826106fc565b9150506060840151601f198483030160808501526107fd82826106fc565b608095909501516001600160a01b031660a09490940193909352509192915050565b600181811c9082168061083357607f821691505b60208210810361085357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156108a357806000526020600020601f840160051c810160208510156108805750805b601f840160051c820191505b818110156108a0576000815560010161088c565b50505b505050565b815167ffffffffffffffff8111156108c2576108c26105aa565b6108d6816108d0845461081f565b84610859565b6020601f82116001811461090a57600083156108f25750848201515b600019600385901b1c1916600184901b1784556108a0565b600084815260208120601f198516915b8281101561093a578785015182556020948501946001909201910161091a565b50848210156109585786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60408152600061097a60408301856106fc565b828103602084015261098c81856106fc565b95945050505050565b6000600182016109b557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220b9119938d5418ff42f5051fd479290782f6eba8edcc37761dc7d5f6b3d1cab6264736f6c634300081c0033";

type FarmerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FarmerRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FarmerRegistry__factory extends ContractFactory {
  constructor(...args: FarmerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FarmerRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FarmerRegistry__factory {
    return super.connect(runner) as FarmerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmerRegistryInterface {
    return new Interface(_abi) as FarmerRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FarmerRegistry {
    return new Contract(address, _abi, runner) as unknown as FarmerRegistry;
  }
}
